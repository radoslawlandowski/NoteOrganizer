appName: NoteOrganizer

database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: postgres

  # the password
  password: postgres

  # the JDBC URL
  url: jdbc:postgresql://localhost:5432/NoteOrganizer

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate.hbm2ddl.auto: validate

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

# use the simple server factory if you only want to run on a single port
server:
  type: simple
  connector:
    type: http
    port: 8080

#server:
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
#  applicationConnectors:
#    - type: http
#      port: 8080
#    - type: https
#      port: 8443
      #keyStorePath: example.keystore
      #keyStorePassword: example
      #validateCerts: false
      #validatePeers: false
    #this requires the alpn-boot library on the JVM's boot classpath
    #- type: h2
    #  port: 8445
    #  keyStorePath: example.keystore
    #  keyStorePassword: example
    #  validateCerts: false
    #  validatePeers: false
#  adminConnectors:
#    - type: http
#      port: 8081
#    - type: https
#      port: 8444
      #keyStorePath: example.keystore
      #keyStorePassword: example
      #validateCerts: false
      #validatePeers: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG
#
     #Redirects SQL logs to a separate file
    org.hibernate.SQL:
      level: DEBUG
#
# Logback's Time Based Rolling Policy - archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}.log.gz
# Logback's Size and Time Based Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
# Logback's Fixed Window Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%i.log.gz

  appenders:
    - type: console
    - type: file
      threshold: INFO
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      currentLogFilename: /tmp/application.log
      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 10MB

# the key needs to match the suffix of the renderer
#viewRendererConfiguration:
  #  .ftl:
  #      strict_syntax: yes
  #      whitespace_stripping: yes

#metrics:
#  reporters:
#    - type: graphite
#      host: localhost
#      port: 2003
#      prefix: example
#      frequency: 10s

applicationDescr: This is my description